<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
		
		
    <!-- springmvc中，控制器（类似于struts2中的action）的指定，是以注解的形式指定的，context:component-scan 的base-package属性执行了程序需要扫描（注解）的包，
	程序启动之后就会将当前包下的注解扫描到，如果找到控制器对应的注解，就会把该类当做一个控制器 -->
	
	
		<!-- Freemarker视图解析器 -->
   <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--是否启用缓存 -->
        <property name="cache" value="false" />
        <!--自动添加到路径中的前缀 -->
        <property name="prefix" value="" />
        <!--自动添加到路径中的后缀 -->
        <property name="suffix" value=".html" />
        <!--指定视图渲染类 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <!-- 设置是否暴露Spring的macro辅助类库，默认为true -->
        <property name="exposeSpringMacroHelpers" value="true" />
        <!-- 是否应将所有request属性添加到与模板合并之前的模型。默认为false。 -->
        <property name="exposeRequestAttributes" value="true" />
        <!-- 是否应将所有session属性添加到与模板合并之前的模型。默认为false。 -->
        <property name="exposeSessionAttributes" value="true" />
        <!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
        <property name="requestContextAttribute" value="rc" />
        <!--设置所有视图的内容类型，如果视图本身设置内容类型视图类可以忽略 -->
        <property name="contentType" value="text/html;charset=UTF-8" />
        <!-- 优先级，越小越前 -->
        <property name="order" value="1" />
    </bean>
	
	<context:component-scan base-package="com.oa.controller"></context:component-scan>
	<context:component-scan base-package="com.oa.aop" />
	<!-- 开启aop注解功能 -->
     <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/WEB-INF/"></property>
			<property name="suffix" value=".jsp"></property>
			<property name="order" value="3" ></property>
		</bean>	
	<!-- 访问静态资源时，让请求通过  -->
    <mvc:default-servlet-handler />
    
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/css/" mapping="/css/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/img/" mapping="/img/**"></mvc:resources>
	<mvc:resources location="/WEB-INF/lang/" mapping="/lang/**"></mvc:resources>
	<mvc:resources location="/WEB-INF/umeditor/" mapping="/umeditor/**"></mvc:resources>
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login.html"/>
			<mvc:exclude-mapping path="/User/userLogin"/>
			 <mvc:exclude-mapping path="/lib/**" />
            <mvc:exclude-mapping path="/satic/**" />
            <mvc:exclude-mapping path="/temp/**" />
			<bean id="loginInfoInterceptor" class="com.oa.interceptor.LoginInfoInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="freemarkerConfig"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath"  value="/WEB-INF" />  <!-- 生成文件路径 -->
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">5</prop><!-- 刷新模板的周期，单位为秒 -->
                <prop key="defaultEncoding">UTF-8</prop><!--模板的编码格式 -->
                <prop key="url_escaping_charset">UTF-8</prop><!--url编码格式 -->
                <prop key="classic_compatible">true</prop> <!--此属性可以防止模板解析空值时的错误 -->
                <prop key="locale">zh_CN</prop> <!--该模板所使用的国际化语言环境选项-->
                <prop key="boolean_format">true,false</prop> <!--布尔值格式-->
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop> <!--日期时间格式-->
                <prop key="time_format">HH:mm:ss</prop><!--时间格式-->
                <prop key="number_format">0.######</prop><!--数字格式-->
                <prop key="whitespace_stripping">true</prop><!--自动开启/关闭空白移除，默认为true-->
            </props>
        </property>
    </bean>
	
		<!--annotation-driven  这时一种简写形式 在开发中一般都会配置 
	   相当于注册了DefaultAnnotationHandlerMapping 和AnnotationMethodHandlerAdapter两个bean
	 是springmvc为@controller分发请求所必须的。并提供了数据绑定支持，读写xml,读写json...的支持
	  相应的do请求被controller处理，而静态资源因为没有相应的controller就会被default Servlet处理。
	  总之 没有controller就会被default servlet处理。
	 -->	
	<mvc:annotation-driven></mvc:annotation-driven>	
	<!-- 定时任务 -->
	<task:annotation-driven/>
</beans>